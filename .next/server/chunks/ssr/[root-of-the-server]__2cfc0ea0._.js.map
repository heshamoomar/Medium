{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/post/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { notFound } from \"next/navigation\";\r\nimport { CldImage } from \"next-cloudinary\";\r\n\r\nexport default async function Page({ params }: Awaited<{ params: { id: string } }>) {\r\n  const { id } = await params;\r\n\r\n\r\n  const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/posts/${id}`, {\r\n      method: \"GET\",\r\n      //cache: \"no-store\", // ensures fresh data\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //next: { revalidate: 10 }, // revalidate every 10 seconds\r\n\r\n\r\n    });\r\n\r\n\r\n  if (!res.ok) {\r\n    console.log(\"Post not found with ID:\", id );\r\n    console.error(\"Failed to fetch post:\", res.statusText);\r\n\r\n    return notFound();\r\n  }\r\n  \r\n  const post = await res.json();\r\n\r\n  console.log(\"Fetched post:\", post);\r\n  \r\n\r\n  return (\r\n    <main className=\"max-w-3xl mx-auto p-8 bg-white rounded-2xl shadow\">\r\n      <h1 className=\"text-4xl font-bold mb-4\">{post.title}</h1>\r\n      <p className=\"text-gray-600 mb-6\">{post.description}</p>\r\n\r\n\r\n      {post.image ? (\r\n        <CldImage\r\n          src={post.image}\r\n          width=\"500\"\r\n          height=\"500\"\r\n          crop={{ type: \"auto\", source: true }}\r\n          alt={post.title}\r\n        />\r\n      ) : (\r\n        <div className=\"w-full h-64 bg-gray-200 flex items-center justify-center rounded-xl mb-6\">\r\n          <span className=\"text-gray-500\">No image available</span>\r\n        </div>\r\n      )}\r\n\r\n      <article className=\"prose lg:prose-lg\">\r\n        <p>{post.content}</p>\r\n      </article>\r\n\r\n      <div className=\"mt-8 text-sm text-gray-500\">\r\n        Posted on {new Date(post.createdAt).toLocaleDateString()}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,eAAe,KAAK,EAAE,MAAM,EAAuC;IAChF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAGrB,MAAM,MAAM,MAAM,MAAM,6DAAoC,WAAW,EAAE,IAAI,EAAE;QAC3E,QAAQ;QACR,0CAA0C;QAC1C,SAAS;YACP,gBAAgB;QAClB;IAIF;IAGF,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,QAAQ,GAAG,CAAC,2BAA2B;QACvC,QAAQ,KAAK,CAAC,yBAAyB,IAAI,UAAU;QAErD,OAAO,IAAA,8IAAQ;IACjB;IAEA,MAAM,OAAO,MAAM,IAAI,IAAI;IAE3B,QAAQ,GAAG,CAAC,iBAAiB;IAG7B,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAA2B,KAAK,KAAK;;;;;;0BACnD,8OAAC;gBAAE,WAAU;0BAAsB,KAAK,WAAW;;;;;;YAGlD,KAAK,KAAK,iBACT,8OAAC,gKAAQ;gBACP,KAAK,KAAK,KAAK;gBACf,OAAM;gBACN,QAAO;gBACP,MAAM;oBAAE,MAAM;oBAAQ,QAAQ;gBAAK;gBACnC,KAAK,KAAK,KAAK;;;;;qCAGjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BAAgB;;;;;;;;;;;0BAIpC,8OAAC;gBAAQ,WAAU;0BACjB,cAAA,8OAAC;8BAAG,KAAK,OAAO;;;;;;;;;;;0BAGlB,8OAAC;gBAAI,WAAU;;oBAA6B;oBAC/B,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;AAI9D","debugId":null}}]
}