{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/api/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n  auth_id: { type: String, required: true, unique: true },\r\n  email: { type: String, required: true },\r\n  family_name: String,\r\n  given_name: String,\r\n  picture: { type: String, trim: true },\r\n  lastLogin: { type: Date }\r\n});\r\n\r\nUserSchema.index({ name: 1 }); // For searching by name\r\n\r\nexport default mongoose.models.User || mongoose.model(\"User\", UserSchema);"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACrC,SAAS;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACtD,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,aAAa;IACb,YAAY;IACZ,SAAS;QAAE,MAAM;QAAQ,MAAM;IAAK;IACpC,WAAW;QAAE,MAAM;IAAK;AAC1B;AAEA,WAAW,KAAK,CAAC;IAAE,MAAM;AAAE,IAAI,wBAAwB;uCAExC,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/lib/mongodb.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet isConnected = false; // Track connection state\r\n\r\nexport async function connectDB() {\r\n  if (isConnected) {\r\n    console.log(\"‚ö° Using existing MongoDB connection\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const conn = await mongoose.connect(process.env.MONGODB_URI || \"mongodb://localhost:27017/medium-clone\", {\r\n      dbName: \"medium-clone\",\r\n    });\r\n\r\n    isConnected = conn.connections[0].readyState === 1; // 1 = connected\r\n    console.log(\"‚úÖ MongoDB connected:\", conn.connection.host);\r\n  } catch (error) {\r\n    console.error(\"‚ùå MongoDB connection error:\", error);\r\n    throw new Error(\"Failed to connect to MongoDB\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,IAAI,cAAc,OAAO,yBAAyB;AAE3C,eAAe;IACpB,IAAI,aAAa;QACf,QAAQ,GAAG,CAAC;QACZ;IACF;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,IAAI,0CAA0C;YACvG,QAAQ;QACV;QAEA,cAAc,KAAK,WAAW,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,gBAAgB;QACpE,QAAQ,GAAG,CAAC,wBAAwB,KAAK,UAAU,CAAC,IAAI;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/lib/syncUser.ts"],"sourcesContent":["//  syncUser.ts\r\n// Syncs the authenticated Kinde user with our MongoDB database.\r\n// \r\n// If the user does not exist in our DB, creates a new user record.\r\n// If the user exists, updates their info (e.g., last login time).  \r\n// Returns the user document from our DB.\r\n// Uses Kinde's server-side session to get the authenticated user info.\r\n\r\n\r\nimport User from \"../api/models/User\";\r\nimport { getKindeServerSession } from \"@kinde-oss/kinde-auth-nextjs/server\";\r\nimport { connectDB } from \"../lib/mongodb\";\r\n\r\nexport async function syncUser() {\r\n  await connectDB();\r\n\r\n  const { getUser } = getKindeServerSession();\r\n  const kindeUser = await getUser();\r\n  if (!kindeUser) return null;\r\n\r\n  const {\r\n    id: auth_id,\r\n    email,\r\n    family_name,\r\n    given_name,\r\n    picture,\r\n  } = kindeUser;\r\n\r\n  const user = await User.findOneAndUpdate(\r\n    { auth_id }, // match by Kinde's ID\r\n    {\r\n      auth_id,\r\n      email,\r\n      family_name,\r\n      given_name,\r\n      picture,\r\n      lastLogin: new Date(),\r\n    },\r\n    { upsert: true, new: true, setDefaultsOnInsert: true }\r\n  );\r\n\r\n  return user;\r\n}\r\n"],"names":[],"mappings":"AAAA,eAAe;AACf,gEAAgE;AAChE,GAAG;AACH,mEAAmE;AACnE,oEAAoE;AACpE,yCAAyC;AACzC,uEAAuE;;;;;AAGvE;AACA;AAAA;AACA;;;;AAEO,eAAe;IACpB,MAAM,IAAA,yIAAS;IAEf,MAAM,EAAE,OAAO,EAAE,GAAG,IAAA,+QAAqB;IACzC,MAAM,YAAY,MAAM;IACxB,IAAI,CAAC,WAAW,OAAO;IAEvB,MAAM,EACJ,IAAI,OAAO,EACX,KAAK,EACL,WAAW,EACX,UAAU,EACV,OAAO,EACR,GAAG;IAEJ,MAAM,OAAO,MAAM,8IAAI,CAAC,gBAAgB,CACtC;QAAE;IAAQ,GACV;QACE;QACA;QACA;QACA;QACA;QACA,WAAW,IAAI;IACjB,GACA;QAAE,QAAQ;QAAM,KAAK;QAAM,qBAAqB;IAAK;IAGvD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/dashboard/page.tsx"],"sourcesContent":["import { LogoutLink } from \"@kinde-oss/kinde-auth-nextjs/components\";\r\n// import { requireUser }from \"../lib/auth\"; // utility function to require user auth and get user info\r\n\r\nimport { syncUser } from \"../lib/syncUser\";\r\nimport { redirect } from \"next/navigation\";\r\n\r\nexport default async function Dashboard() {\r\n\r\n  const user = await syncUser(); // fetch and sync user from Kinde to MongoDB to keep updated\r\n\r\n\r\n  // --- Fetch posts for this user ---\r\n  const res = await fetch(\r\n  `${process.env.NEXT_PUBLIC_BASE_URL}/api/users/${user._id}/posts`,\r\n  { cache: \"no-store\" }\r\n  );\r\n\r\n  const posts = await res.json();\r\n\r\n  console.log(\"User Posts:\", posts);\r\n  // ---------------------------------\r\n\r\n\r\n\r\n  if (!user) {\r\n    redirect(\"/\"); // not logged in\r\n  }\r\n  console.log(\"DB User:\", user);\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col bg-gray-50\">\r\n      {/* Top strip with Logout button */}\r\n      <header className=\"w-full flex items-center justify-between bg-white shadow px-8 py-4\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center\">\r\n            {user?.picture ? (\r\n              // eslint-disable-next-line @next/next/no-img-element\r\n              <img src={user.picture} alt=\"Profile\" className=\"w-10 h-10 rounded-full object-cover\" />\r\n            ) : (\r\n              <span className=\"text-2xl text-gray-400\">üë§</span>\r\n            )}\r\n          </div>\r\n          <span className=\"font-semibold text-gray-700\">\r\n            {user?.given_name || user?.email || \"User\"}\r\n          </span>\r\n                        <a\r\n                href=\"/\"\r\n                className=\"rounded-xl border px-4 py-2 text-center hover:text-blue-600 focus:text-blue-600 transition\"\r\n              >\r\n                Explore\r\n              </a>\r\n\r\n        </div>\r\n\r\n        {/* CENTER: Post */}\r\n        <div className=\"flex items-center gap-4 absolute left-1/2 transform -translate-x-1/2\">\r\n              <a\r\n                href=\"/post\"\r\n                className=\"rounded-xl border px-4 py-2 text-center hover:text-blue-600 focus:text-blue-600 transition\"\r\n              >\r\n                Post\r\n              </a>\r\n        </div>\r\n\r\n\r\n        <LogoutLink className=\"rounded-xl border px-4 py-2 text-center hover:text-blue-600 focus:text-blue-600 transition\">\r\n          Logout\r\n        </LogoutLink>\r\n      </header>\r\n\r\n      {/* Main dashboard content */}\r\n      <main className=\"flex flex-1 w-full flex-col items-center px-8 py-10\">\r\n\r\n            {/* User Header */}\r\n    <div className=\"flex items-center gap-4 border-b pb-4\">\r\n      {user?.picture ? (\r\n        <img\r\n          src={user.picture}\r\n          alt={user.given_name + \" \" + user.family_name || \"User\"}\r\n          className=\"w-16 h-16 rounded-full object-cover shadow\"\r\n        />\r\n      ) : (\r\n        <span className=\"w-16 h-16 rounded-full bg-gray-200 flex items-center justify-center text-2xl text-gray-400 shadow\">\r\n          üë§\r\n        </span>\r\n      )}\r\n      <div>\r\n        <h1 className=\"text-xl font-semibold\">\r\n          {user.given_name + \" \" + user.family_name || \"Unnamed User\"}\r\n        </h1>\r\n        <p className=\"text-gray-500 text-sm\">\r\n          {user.email || \"No email provided\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n        <h2 className=\"text-2xl font-bold text-gray-700 mb-4\">My Posts</h2>\r\n        <UserPosts userId={user._id} />\r\n      </main>    \r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA,uGAAuG;AAEvG;AACA;AAAA;;;;;AAEe,eAAe;IAE5B,MAAM,OAAO,MAAM,IAAA,yIAAQ,KAAI,4DAA4D;IAG3F,oCAAoC;IACpC,MAAM,MAAM,MAAM,MAClB,6DAAoC,WAAW,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,EACjE;QAAE,OAAO;IAAW;IAGpB,MAAM,QAAQ,MAAM,IAAI,IAAI;IAE5B,QAAQ,GAAG,CAAC,eAAe;IAC3B,oCAAoC;IAIpC,IAAI,CAAC,MAAM;QACT,IAAA,iMAAQ,EAAC,MAAM,gBAAgB;IACjC;IACA,QAAQ,GAAG,CAAC,YAAY;IAExB,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACZ,MAAM,UACL,qDAAqD;8CACrD,8OAAC;oCAAI,KAAK,KAAK,OAAO;oCAAE,KAAI;oCAAU,WAAU;;;;;yDAEhD,8OAAC;oCAAK,WAAU;8CAAyB;;;;;;;;;;;0CAG7C,8OAAC;gCAAK,WAAU;0CACb,MAAM,cAAc,MAAM,SAAS;;;;;;0CAExB,8OAAC;gCACT,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;kCAOP,8OAAC;wBAAI,WAAU;kCACT,cAAA,8OAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;kCAMP,8OAAC,wNAAU;wBAAC,WAAU;kCAA6F;;;;;;;;;;;;0BAMrH,8OAAC;gBAAK,WAAU;;kCAGlB,8OAAC;wBAAI,WAAU;;4BACZ,MAAM,wBACL,8OAAC;gCACC,KAAK,KAAK,OAAO;gCACjB,KAAK,KAAK,UAAU,GAAG,MAAM,KAAK,WAAW,IAAI;gCACjD,WAAU;;;;;qDAGZ,8OAAC;gCAAK,WAAU;0CAAoG;;;;;;0CAItH,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDACX,KAAK,UAAU,GAAG,MAAM,KAAK,WAAW,IAAI;;;;;;kDAE/C,8OAAC;wCAAE,WAAU;kDACV,KAAK,KAAK,IAAI;;;;;;;;;;;;;;;;;;kCAOjB,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,8OAAC;wBAAU,QAAQ,KAAK,GAAG;;;;;;;;;;;;;;;;;;AAInC","debugId":null}}]
}