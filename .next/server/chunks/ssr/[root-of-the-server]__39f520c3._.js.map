{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/post/%5Bid%5D/page.tsx"],"sourcesContent":["import { notFound } from \"next/navigation\";\r\nimport { getKindeServerSession } from \"@kinde-oss/kinde-auth-nextjs/server\";\r\nimport { RegisterLink, LoginLink, LogoutLink } from \"@kinde-oss/kinde-auth-nextjs/components\";\r\nimport OnClickUserName from \"../../components/onClickUserName\";\r\n\r\n\r\nexport default async function Page({ params }: { params: { id: string } }) {\r\n  const { id } = await params;\r\n\r\n    // Get user session info\r\n    const { getUser, isAuthenticated } = getKindeServerSession();\r\n    const user = await getUser();\r\n    const authenticated = await isAuthenticated();\r\n    console.log(\"User:\", user);\r\n    console.log(\"Authenticated:\", authenticated);\r\n\r\n  // --- Fetch Post ---\r\n  const fetched_post = await fetch(\r\n    `${process.env.NEXT_PUBLIC_BASE_URL}/api/posts/${id}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }\r\n  );\r\n\r\n  if (!fetched_post.ok) {\r\n    console.error(\"Failed to fetch post:\", fetched_post.statusText);\r\n    return notFound();\r\n  }\r\n\r\n  const post = await fetched_post.json();\r\n\r\n  // --- Fetch Post Owner ---\r\n  const fetched_owner = await fetch(\r\n    `${process.env.NEXT_PUBLIC_BASE_URL}/api/users/${post.owner_id}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      cache: \"no-store\",\r\n    }\r\n  );\r\n\r\n  if (!fetched_owner.ok) {\r\n    console.error(\"Failed to fetch post owner:\", fetched_owner.statusText);\r\n    return notFound();\r\n  }\r\n\r\n  const owner = await fetched_owner.json();\r\n  console.log(\"Post Owner:\", owner);\r\n\r\n    // string | null\r\n    var PostOwerPfP_onclick = '/user/'+post.owner_id; // default // ÿ≤ÿ®ŸàŸÜ ŸÅŸÇÿ∑ \r\n\r\n    console.log(\"PostOwerPfP_onclick:\", PostOwerPfP_onclick);\r\n\r\n    if(user?.id==owner.auth_id && authenticated)  // own post // go to dashboard // ÿ≤ÿ®ŸàŸÜ Ÿàÿµÿßÿ≠ÿ® ŸÖŸÉÿßŸÜ\r\n      {\r\n      PostOwerPfP_onclick = '/dashboard';\r\n    }\r\n\r\n  // --- UI ---\r\n  return (\r\n      <>\r\n      \r\n    \r\n    <main className=\"max-w-3xl mx-auto p-8 bg-white rounded-2xl shadow space-y-6\">\r\n      {/* User Header */}\r\n      <header className=\"flex items-center gap-4 border-b pb-4\">\r\n        {owner?.picture ? (\r\n                <a href={PostOwerPfP_onclick}>\r\n                  <img\r\n                    src={owner.picture}\r\n                    alt={owner.given_name || \"Profile\"}\r\n                    className=\"w-10 h-10 rounded-full object-cover\"\r\n                  />\r\n                </a>\r\n        ) : (\r\n          <span className=\"w-14 h-14 rounded-full bg-gray-200 flex items-center justify-center text-2xl text-gray-400 shadow\">\r\n            üë§\r\n          </span>\r\n        )}\r\n        <div>\r\n          <h2 className=\"text-lg font-semibold\">{owner.given_name + ' ' + owner.family_name || \"Unknown User\"}</h2>\r\n          <p className=\"text-sm text-gray-500\">\r\n            Posted on {new Date(post.createdAt).toLocaleDateString()}\r\n          </p>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Post Content */}\r\n      <section>\r\n        <h1 className=\"text-3xl font-bold mb-2\">{post.title}</h1>\r\n        <p className=\"text-gray-600 mb-4\">{post.description}</p>\r\n\r\n        {post.image && (\r\n          <img\r\n            src={post.image}\r\n            alt={post.title}\r\n            className=\"w-full rounded-xl shadow mb-6\"\r\n          />\r\n        )}\r\n\r\n        <article className=\"prose lg:prose-lg\">\r\n          <p>{post.content}</p>\r\n        </article>\r\n      </section>\r\n    </main>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;;;;AAKe,eAAe,KAAK,EAAE,MAAM,EAA8B;IACvE,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAEnB,wBAAwB;IACxB,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,GAAG,IAAA,+QAAqB;IAC1D,MAAM,OAAO,MAAM;IACnB,MAAM,gBAAgB,MAAM;IAC5B,QAAQ,GAAG,CAAC,SAAS;IACrB,QAAQ,GAAG,CAAC,kBAAkB;IAEhC,qBAAqB;IACrB,MAAM,eAAe,MAAM,MACzB,6DAAoC,WAAW,EAAE,IAAI,EACrD;QACE,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;IAChD;IAGF,IAAI,CAAC,aAAa,EAAE,EAAE;QACpB,QAAQ,KAAK,CAAC,yBAAyB,aAAa,UAAU;QAC9D,OAAO,IAAA,iMAAQ;IACjB;IAEA,MAAM,OAAO,MAAM,aAAa,IAAI;IAEpC,2BAA2B;IAC3B,MAAM,gBAAgB,MAAM,MAC1B,6DAAoC,WAAW,EAAE,KAAK,QAAQ,EAAE,EAChE;QACE,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,OAAO;IACT;IAGF,IAAI,CAAC,cAAc,EAAE,EAAE;QACrB,QAAQ,KAAK,CAAC,+BAA+B,cAAc,UAAU;QACrE,OAAO,IAAA,iMAAQ;IACjB;IAEA,MAAM,QAAQ,MAAM,cAAc,IAAI;IACtC,QAAQ,GAAG,CAAC,eAAe;IAEzB,gBAAgB;IAChB,IAAI,sBAAsB,WAAS,KAAK,QAAQ,EAAE,uBAAuB;IAEzE,QAAQ,GAAG,CAAC,wBAAwB;IAEpC,IAAG,MAAM,MAAI,MAAM,OAAO,IAAI,eAC5B;QACA,sBAAsB;IACxB;IAEF,aAAa;IACb,qBACI;kBAGF,cAAA,8OAAC;YAAK,WAAU;;8BAEd,8OAAC;oBAAO,WAAU;;wBACf,OAAO,wBACA,8OAAC;4BAAE,MAAM;sCACP,cAAA,8OAAC;gCACC,KAAK,MAAM,OAAO;gCAClB,KAAK,MAAM,UAAU,IAAI;gCACzB,WAAU;;;;;;;;;;iDAIpB,8OAAC;4BAAK,WAAU;sCAAoG;;;;;;sCAItH,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAyB,MAAM,UAAU,GAAG,MAAM,MAAM,WAAW,IAAI;;;;;;8CACrF,8OAAC;oCAAE,WAAU;;wCAAwB;wCACxB,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;8BAM5D,8OAAC;;sCACC,8OAAC;4BAAG,WAAU;sCAA2B,KAAK,KAAK;;;;;;sCACnD,8OAAC;4BAAE,WAAU;sCAAsB,KAAK,WAAW;;;;;;wBAElD,KAAK,KAAK,kBACT,8OAAC;4BACC,KAAK,KAAK,KAAK;4BACf,KAAK,KAAK,KAAK;4BACf,WAAU;;;;;;sCAId,8OAAC;4BAAQ,WAAU;sCACjB,cAAA,8OAAC;0CAAG,KAAK,OAAO;;;;;;;;;;;;;;;;;;;;;;;;AAM1B","debugId":null}}]
}