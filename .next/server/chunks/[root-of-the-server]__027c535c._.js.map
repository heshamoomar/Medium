{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/lib/mongodb.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet isConnected = false; // Track connection state\r\n\r\nexport async function connectDB() {\r\n  if (isConnected) {\r\n    console.log(\"⚡ Using existing MongoDB connection\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const conn = await mongoose.connect(process.env.MONGODB_URI || \"mongodb://localhost:27017/medium-clone\", {\r\n      dbName: \"medium-clone\",\r\n    });\r\n\r\n    isConnected = conn.connections[0].readyState === 1; // 1 = connected\r\n    console.log(\"✅ MongoDB connected:\", conn.connection.host);\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB connection error:\", error);\r\n    throw new Error(\"Failed to connect to MongoDB\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,IAAI,cAAc,OAAO,yBAAyB;AAE3C,eAAe;IACpB,IAAI,aAAa;QACf,QAAQ,GAAG,CAAC;QACZ;IACF;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,IAAI,0CAA0C;YACvG,QAAQ;QACV;QAEA,cAAc,KAAK,WAAW,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,gBAAgB;QACpE,QAAQ,GAAG,CAAC,wBAAwB,KAAK,UAAU,CAAC,IAAI;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/api/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n  auth_id: { type: String, required: true, unique: true },\r\n  email: { type: String, required: true },\r\n  family_name: String,\r\n  given_name: String,\r\n  picture: { type: String, trim: true },\r\n  lastLogin: { type: Date }\r\n});\r\n\r\nUserSchema.index({ name: 1 }); // For searching by name\r\n\r\nexport default mongoose.models.User || mongoose.model(\"User\", UserSchema);"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACrC,SAAS;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACtD,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,aAAa;IACb,YAAY;IACZ,SAAS;QAAE,MAAM;QAAQ,MAAM;IAAK;IACpC,WAAW;QAAE,MAAM;IAAK;AAC1B;AAEA,WAAW,KAAK,CAAC;IAAE,MAAM;AAAE,IAAI,wBAAwB;uCAExC,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/api/users/route.ts"],"sourcesContent":["// medium/src/app/api/users/route.ts\r\n// bulk fetch users by IDs\r\n\r\n\"use server\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { connectDB } from \"../../lib/mongodb\";\r\nimport mongoose from \"mongoose\";\r\nimport User from \"../models/User\";\r\n\r\n// GET /api/users?ids=123,456,789\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    await connectDB();\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const idsParam = searchParams.get(\"ids\");\r\n\r\n    if (!idsParam) {\r\n      return NextResponse.json(\r\n        { error: \"No ids provided\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const ids = idsParam\r\n      .split(\",\")\r\n      .filter((id) => mongoose.Types.ObjectId.isValid(id));\r\n\r\n    if (ids.length === 0) {\r\n      return NextResponse.json(\r\n        { error: \"No valid user IDs\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const users = await User.find({ _id: { $in: ids } }).lean();\r\n\r\n    return NextResponse.json(users, { status: 200 });\r\n  } catch (err) {\r\n    console.error(\"❌ Error fetching users:\", err);\r\n    return NextResponse.json(\r\n      { error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,oCAAoC;AACpC,0BAA0B;;;;;;AAG1B;AACA;AACA;AACA;;;;;;;AAGO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,IAAA,2IAAS;QAEf,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,WAAW,aAAa,GAAG,CAAC;QAElC,IAAI,CAAC,UAAU;YACb,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkB,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,MAAM,SACT,KAAK,CAAC,KACN,MAAM,CAAC,CAAC,KAAO,oHAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;QAElD,IAAI,IAAI,MAAM,KAAK,GAAG;YACpB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoB,GAC7B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,QAAQ,MAAM,gJAAI,CAAC,IAAI,CAAC;YAAE,KAAK;gBAAE,KAAK;YAAI;QAAE,GAAG,IAAI;QAEzD,OAAO,gJAAY,CAAC,IAAI,CAAC,OAAO;YAAE,QAAQ;QAAI;IAChD,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;;;IAnCsB;;AAAA,iPAAA","debugId":null}}]
}