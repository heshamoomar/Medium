module.exports=[18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},26046,(e,t,r)=>{t.exports=e.x("mongoose",()=>require("mongoose"))},80983,44300,e=>{"use strict";e.s(["connectDB",()=>n],80983);var t=e.i(26046);let r=!1;async function n(){if(r)return void console.log("⚡ Using existing MongoDB connection");try{let e=await t.default.connect(process.env.MONGODB_URI||"mongodb://localhost:27017/medium-clone",{dbName:"medium-clone"});r=1===e.connections[0].readyState,console.log("✅ MongoDB connected:",e.connection.host)}catch(e){throw console.error("❌ MongoDB connection error:",e),Error("Failed to connect to MongoDB")}}e.s(["default",()=>o],44300);let a=new t.default.Schema({owner_id:{type:t.default.Schema.Types.ObjectId,ref:"users",required:!0},title:{type:String,required:!0,trim:!0},description:{type:String,trim:!0},image:{type:String,trim:!0},content:{type:String,required:!0},createdAt:{type:Date,default:Date.now},updatedAt:{type:Date,default:Date.now}},{timestamps:!0});a.index({owner_id:1,createdAt:-1}),a.index({title:"text",description:"text",content:"text"});let o=t.default.models.Post||t.default.model("Post",a)},98027,(e,t,r)=>{},65872,e=>{"use strict";e.s(["handler",()=>q,"patchFetch",()=>j,"routeModule",()=>C,"serverHooks",()=>N,"workAsyncStorage",()=>A,"workUnitAsyncStorage",()=>b],65872);var t=e.i(47909),r=e.i(74017),n=e.i(96250),a=e.i(59756),o=e.i(61916),s=e.i(69741),i=e.i(16795),l=e.i(87718),d=e.i(95169),u=e.i(47587),p=e.i(66012),c=e.i(70101),x=e.i(26937),h=e.i(10372),m=e.i(93695);e.i(52474);var g=e.i(220);e.s(["GET",()=>w],53013);var R=e.i(89171),f=e.i(80983),v=e.i(44300),y=e.i(26046);async function w(e,t){try{await (0,f.connectDB)();let{id:e}=t.params;if(console.log("Fetching post with ID:",e),!y.default.Types.ObjectId.isValid(e))return R.NextResponse.json({error:"Invalid post ID"},{status:400});let r=await v.default.findById(e).lean();if(!r)return R.NextResponse.json({error:"Post not found"},{status:404});return R.NextResponse.json(r,{status:200})}catch(e){return console.error("❌ Error fetching post:",e),R.NextResponse.json({error:"Failed to fetch post"},{status:500})}}var E=e.i(53013);let C=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/posts/[id]/route",pathname:"/api/posts/[id]",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/src/app/api/posts/[id]/route.ts",nextConfigOutput:"",userland:E}),{workAsyncStorage:A,workUnitAsyncStorage:b,serverHooks:N}=C;function j(){return(0,n.patchFetch)({workAsyncStorage:A,workUnitAsyncStorage:b})}async function q(e,t,n){var R;let f="/api/posts/[id]/route";f=f.replace(/\/index$/,"")||"/";let v=await C.prepare(e,t,{srcPage:f,multiZoneDraftMode:!1});if(!v)return t.statusCode=400,t.end("Bad Request"),null==n.waitUntil||n.waitUntil.call(n,Promise.resolve()),null;let{buildId:y,params:w,nextConfig:E,isDraftMode:A,prerenderManifest:b,routerServerContext:N,isOnDemandRevalidate:j,revalidateOnlyGenerated:q,resolvedPathname:D}=v,O=(0,s.normalizeAppPath)(f),P=!!(b.dynamicRoutes[O]||b.routes[D]);if(P&&!A){let e=!!b.routes[D],t=b.dynamicRoutes[O];if(t&&!1===t.fallback&&!e)throw new m.NoFallbackError}let S=null;!P||C.isDev||A||(S="/index"===(S=D)?"/":S);let T=!0===C.isDev||!P,_=P&&!T,k=e.method||"GET",I=(0,o.getTracer)(),M=I.getActiveScopeSpan(),U={params:w,prerenderManifest:b,renderOpts:{experimental:{cacheComponents:!!E.experimental.cacheComponents,authInterrupts:!!E.experimental.authInterrupts},supportsDynamicResponse:T,incrementalCache:(0,a.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(R=E.experimental)?void 0:R.cacheLife,isRevalidate:_,waitUntil:n.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,n)=>C.onRequestError(e,t,n,N)},sharedContext:{buildId:y}},H=new i.NodeNextRequest(e),B=new i.NodeNextResponse(t),F=l.NextRequestAdapter.fromNodeNextRequest(H,(0,l.signalFromNodeResponse)(t));try{let s=async r=>C.handle(F,U).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let n=I.getRootSpanAttributes();if(!n)return;if(n.get("next.span_type")!==d.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${n.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let a=n.get("next.route");if(a){let e=`${k} ${a}`;r.setAttributes({"next.route":a,"http.route":a,"next.span_name":e}),r.updateName(e)}else r.updateName(`${k} ${e.url}`)}),i=async o=>{var i,l;let d=async({previousCacheEntry:r})=>{try{if(!(0,a.getRequestMeta)(e,"minimalMode")&&j&&q&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let i=await s(o);e.fetchMetrics=U.renderOpts.fetchMetrics;let l=U.renderOpts.pendingWaitUntil;l&&n.waitUntil&&(n.waitUntil(l),l=void 0);let d=U.renderOpts.collectedTags;if(!P)return await (0,p.sendResponse)(H,B,i,U.renderOpts.pendingWaitUntil),null;{let e=await i.blob(),t=(0,c.toNodeOutgoingHttpHeaders)(i.headers);d&&(t[h.NEXT_CACHE_TAGS_HEADER]=d),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==U.renderOpts.collectedRevalidate&&!(U.renderOpts.collectedRevalidate>=h.INFINITE_CACHE)&&U.renderOpts.collectedRevalidate,n=void 0===U.renderOpts.collectedExpire||U.renderOpts.collectedExpire>=h.INFINITE_CACHE?void 0:U.renderOpts.collectedExpire;return{value:{kind:g.CachedRouteKind.APP_ROUTE,status:i.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:n}}}}catch(t){throw(null==r?void 0:r.isStale)&&await C.onRequestError(e,t,{routerKind:"App Router",routePath:f,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:_,isOnDemandRevalidate:j})},N),t}},m=await C.handleResponse({req:e,nextConfig:E,cacheKey:S,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:b,isRoutePPREnabled:!1,isOnDemandRevalidate:j,revalidateOnlyGenerated:q,responseGenerator:d,waitUntil:n.waitUntil});if(!P)return null;if((null==m||null==(i=m.value)?void 0:i.kind)!==g.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==m||null==(l=m.value)?void 0:l.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,a.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",j?"REVALIDATED":m.isMiss?"MISS":m.isStale?"STALE":"HIT"),A&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let R=(0,c.fromNodeOutgoingHttpHeaders)(m.value.headers);return(0,a.getRequestMeta)(e,"minimalMode")&&P||R.delete(h.NEXT_CACHE_TAGS_HEADER),!m.cacheControl||t.getHeader("Cache-Control")||R.get("Cache-Control")||R.set("Cache-Control",(0,x.getCacheControlHeader)(m.cacheControl)),await (0,p.sendResponse)(H,B,new Response(m.value.body,{headers:R,status:m.value.status||200})),null};M?await i(M):await I.withPropagatedContext(e.headers,()=>I.trace(d.BaseServerSpan.handleRequest,{spanName:`${k} ${e.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":k,"http.target":e.url}},i))}catch(t){if(M||t instanceof m.NoFallbackError||await C.onRequestError(e,t,{routerKind:"App Router",routePath:O,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:_,isOnDemandRevalidate:j})}),P)throw t;return await (0,p.sendResponse)(H,B,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__8d6e756e._.js.map