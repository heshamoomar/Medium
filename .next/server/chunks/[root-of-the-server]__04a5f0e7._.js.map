{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/lib/mongodb.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet isConnected = false; // Track connection state\r\n\r\nexport async function connectDB() {\r\n  if (isConnected) {\r\n    console.log(\"⚡ Using existing MongoDB connection\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const conn = await mongoose.connect(process.env.MONGODB_URI || \"mongodb://localhost:27017/medium-clone\", {\r\n      dbName: \"medium-clone\",\r\n    });\r\n\r\n    isConnected = conn.connections[0].readyState === 1; // 1 = connected\r\n    console.log(\"✅ MongoDB connected:\", conn.connection.host);\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB connection error:\", error);\r\n    throw new Error(\"Failed to connect to MongoDB\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,IAAI,cAAc,OAAO,yBAAyB;AAE3C,eAAe;IACpB,IAAI,aAAa;QACf,QAAQ,GAAG,CAAC;QACZ;IACF;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,IAAI,0CAA0C;YACvG,QAAQ;QACV;QAEA,cAAc,KAAK,WAAW,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,gBAAgB;QACpE,QAAQ,GAAG,CAAC,wBAAwB,KAAK,UAAU,CAAC,IAAI;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/api/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n  auth_id: { type: String, required: true, unique: true },\r\n  email: { type: String, required: true },\r\n  family_name: String,\r\n  given_name: String,\r\n  picture: { type: String, trim: true },\r\n  lastLogin: { type: Date }\r\n});\r\n\r\nUserSchema.index({ name: 1 }); // For searching by name\r\n\r\nexport default mongoose.models.User || mongoose.model(\"User\", UserSchema);"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACrC,SAAS;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACtD,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,aAAa;IACb,YAAY;IACZ,SAAS;QAAE,MAAM;QAAQ,MAAM;IAAK;IACpC,WAAW;QAAE,MAAM;IAAK;AAC1B;AAEA,WAAW,KAAK,CAAC;IAAE,MAAM;AAAE,IAAI,wBAAwB;uCAExC,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///D:/CS/Medium/medium/src/app/api/users/%5Bid%5D/route.ts"],"sourcesContent":["\"use server\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { connectDB } from \"../../../lib/mongodb\";\r\nimport mongoose from \"mongoose\";\r\nimport User from \"../../models/User\";\r\n\r\nexport async function GET(\r\n  request: NextRequest,\r\n  context: { params: Promise<{ id: string }> }\r\n) {\r\n  try {\r\n    await connectDB();\r\n\r\n    const { id } = await context.params;\r\n    console.log(\"Fetching post owner with ID:\", id);\r\n\r\n    if (!mongoose.Types.ObjectId.isValid(id)) {\r\n      return NextResponse.json({ error: \"Invalid post owner ID\" }, { status: 400 });\r\n    }\r\n\r\n    const user = await User.findById(id).lean();\r\n    if (!user) {\r\n      console.error(\"❌ Error finding post owner:\", id);\r\n      return;\r\n    }\r\n\r\n    return NextResponse.json(user, { status: 200 });\r\n  } catch (err) {\r\n    console.error(\"❌ Error fetching post owner:\", err);\r\n    return;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;;;;;;;AAEO,eAAe,IACpB,OAAoB,EACpB,OAA4C;IAE5C,IAAI;QACF,MAAM,IAAA,2IAAS;QAEf,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,MAAM;QACnC,QAAQ,GAAG,CAAC,gCAAgC;QAE5C,IAAI,CAAC,oHAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK;YACxC,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,MAAM,OAAO,MAAM,gJAAI,CAAC,QAAQ,CAAC,IAAI,IAAI;QACzC,IAAI,CAAC,MAAM;YACT,QAAQ,KAAK,CAAC,+BAA+B;YAC7C;QACF;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C;IACF;AACF;;;IAzBsB;;AAAA,iPAAA","debugId":null}}]
}